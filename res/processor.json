{
 "!name": "furmly",
 "!define": {
  "ElementFactory": {
   "prototype": {
    "get": {
     "!type": "fn(opts: ?)",
     "!span": "499[18:2]-502[18:5]",
     "!doc": "Returns an element\n@param {Object} opts options"
    },
    "getAll": {
     "!type": "fn(factory: +ElementFactory, arr: [?], extensionParams: ?) -> [?]",
     "!span": "1225[41:2]-1231[41:8]",
     "!doc": "@param {ElementFactory} factory factory used to create elements\n@param {Array} arr Array of params\n@param {Object} extensionParams [optional] used to create specific elements"
    },
    "!span": "399[13:0]-1506[49:1]"
   },
   "!type": "fn()",
   "!span": "405[13:6]-419[13:20]",
   "!doc": "Used to generate elements."
  },
  "ProcessorContext": {
   "!type": "fn(repo: ?)",
   "!span": "510[16:6]-526[16:22]",
   "!doc": "This provides context for querying entities while running a processor.",
   "get": {
    "!type": "fn() -> +Function",
    "!span": "1482[42:9]-1485[42:12]",
    "!doc": "Find entity  of type {name} using {filter} . Please note querying system entities is not allowed\n@param  {String}   name    Name of Collection/Table\n@param  {Object}   filter  Query filter\n@param  {Object}   options sorting,populating extra values etc [optional]\n@param  {Function} fn      Callback"
   },
   "update": {
    "!type": "fn() -> +Function",
    "!span": "2045[58:9]-2051[58:15]",
    "!doc": "Update an entity\n@param  {String}   name Name of the collection/table entity is located in\n@param  {Object}   data Update data\n@param  {Function} fn   Callback"
   },
   "delete": {
    "!type": "fn() -> +Function",
    "!span": "2340[66:9]-2346[66:15]",
    "!doc": "Delete an entity with the supplied id\n@param  {String}   name Name of Collection/Table\n@param  {String}   id   Id of object to delete\n@param  {Function} fn   Callback"
   },
   "create": {
    "!type": "fn() -> +Function",
    "!span": "2628[74:9]-2634[74:15]",
    "!doc": "Create an entity\n@param  {String}   name Name of the collection/table entity is located in\n@param  {Object}   data Update data\n@param  {function} fn   Callback"
   },
   "getSchema": {
    "!type": "fn(name: ?, fn: ?)",
    "!span": "3578[102:9]-3587[102:18]",
    "!doc": "Get Schema Configuration\n@param  {String}   name Name of Collection/Table\n@param  {Function} fn   Callback"
   },
   "getSchemas": {
    "!type": "fn(...args: ?)",
    "!span": "3953[111:9]-3963[111:19]",
    "!doc": "Get Schema Configuration Names\n@param {Boolean} includeSchema - include the actual schema\n@param {Boolean} includeInternalSchema - include internal schemas\n@param {Object} query - filter\n@param {Object} options - options passed with query\n@param  {Function} fn Callback"
   },
   "aggregate": {
    "!type": "fn() -> +Function",
    "!span": "4577[129:9]-4586[129:18]",
    "!doc": "Function that runs aggregation query on persistance object.\n@param  {String}    name Name of collection/table to run aggregation on\n@param  {...Object} rest Other Args including aggregation query and callback"
   },
   "getCollectionName": {
    "!type": "fn() -> +Function",
    "!span": "4862[135:9]-4879[135:26]",
    "!doc": "Normalizes mongoose collection names to actual mongodb  collection names\n@param  {String} name Name of Collection/Table\n@return {String}      Correct collection name."
   },
   "getProcessor": {
    "!type": "fn(...args: ?)",
    "!span": "7921[221:9]-7933[221:21]",
    "!doc": "Find entity  of type Processor using {filter}\n@param  {Object}   filter  Query filter\n@param  {Object}   options sorting,populating extra values etc [optional]\n@param  {Function} fn      Callback"
   }
  },
  "ProcessorScope": {
   "module": {
    "!span": "0[0:0]-519[21:27]",
    "exports": "ProcessorScope"
   },
   "!proto": "<top>",
   "!span": "0[0:0]-519[21:27]"
  },
  "Constants": "constants"
 },
 "constants": {
  "PROCESSSTATUS": {
   "!span": "859[31:4]-872[31:17]"
  },
  "UIDS": {
   "!span": "1836[52:4]-1840[52:8]",
   "LIB": "constants.PROCESSSTATUS",
   "PROCESSOR": "constants.PROCESSSTATUS",
   "PROCESS": "constants.PROCESSSTATUS"
  },
  "systemEntities": {
   "step": {
    "!type": "string",
    "!span": "4280[137:6]-4284[137:10]"
   },
   "processor": {
    "!type": "string",
    "!span": "4303[138:6]-4312[138:15]"
   },
   "process": {
    "!type": "string",
    "!span": "4336[139:6]-4343[139:13]"
   },
   "asyncValidator": {
    "!type": "string",
    "!span": "4365[140:6]-4379[140:20]"
   },
   "lib": {
    "!type": "string",
    "!span": "4408[141:6]-4411[141:9]"
   }
  },
  "!span": "0[0:0]-9[0:9]",
  "COMMANDTYPE": "constants.PROCESSSTATUS",
  "STEPSTATUS": "constants.PROCESSSTATUS",
  "PROCESSORTYPE": "constants.PROCESSSTATUS",
  "GRIDMODE": "constants.PROCESSSTATUS",
  "GRIDCOMMANDTYPE": "constants.PROCESSSTATUS",
  "STEPMODE": "constants.PROCESSSTATUS",
  "STEPTYPE": "constants.PROCESSSTATUS",
  "ELEMENT_SELECT_SOURCETYPE": "constants.PROCESSSTATUS",
  "ENTRYMODE": "constants.PROCESSSTATUS",
  "VALIDATORTYPE": "constants.PROCESSSTATUS",
  "DATE": "constants.PROCESSSTATUS",
  "INPUTTYPE": "constants.PROCESSSTATUS",
  "NAVIGATIONTYPE": "constants.PROCESSSTATUS",
  "IMAGETYPE": "constants.PROCESSSTATUS",
  "ENTITYTYPE": "constants.PROCESSSTATUS",
  "ELEMENTTYPE": "constants.PROCESSSTATUS"
 },
 "entityRepo": {
  "!type": "+ProcessorContext",
  "!span": "193[5:0]-203[5:10]"
 },
 "elementFactory": {
  "!type": "+ElementFactory",
  "!span": "220[6:0]-234[6:14]"
 },
 "systemEntities": {
  "step": {
   "!type": "string",
   "!span": "4280[137:6]-4284[137:10]"
  },
  "processor": {
   "!type": "string",
   "!span": "4303[138:6]-4312[138:15]"
  },
  "process": {
   "!type": "string",
   "!span": "4336[139:6]-4343[139:13]"
  },
  "asyncValidator": {
   "!type": "string",
   "!span": "4365[140:6]-4379[140:20]"
  },
  "lib": {
   "!type": "string",
   "!span": "4408[141:6]-4411[141:9]"
  },
  "!span": "260[7:0]-274[7:14]"
 },
 "args": {
  "$isAuthorized": {
   "!type": "bool",
   "!span": "316[9:2]-329[9:15]"
  },
  "!span": "304[8:0]-308[8:4]"
 },
 "warn": {
  "!type": "fn(message: string)",
  "!span": "462[20:0]-466[20:4]",
  "!doc": "@param {String} message"
 }
}
